{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "SiccarApi"
  },
  "paths": {
    "/registers/{registerId}/reporting/documents/{schemaId}": {
      "get": {
        "tags": [
          "Executor"
        ],
        "summary": "Returns the current document progress of all process instances started.",
        "description": "Includes process instances started by:\r\n- Anyone",
        "operationId": "GetProcessProgressReports",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "registerId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "schemaId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The progress reports have been returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/InstanceDocumentProgress"
              }
            },
            "examples": {
              "application/json": {
                "schema": {
                  "id": "05d98338-28bd-435e-8df0-ad53c0867ac7",
                  "version": "1ad814bd9b903bb874ebd151b65e2583d88934ce781c29dfd00962d134067ba7",
                  "title": "A Schema Title",
                  "description": "A Schema Description",
                  "fields": [
                    {
                      "id": "92057ef9-ac29-49c6-b0eb-91fe5a6db8a1",
                      "isRequired": true,
                      "minLength": 1,
                      "maxLength": 500,
                      "isPublic": true,
                      "label": [
                        {
                          "culture": "en-GB",
                          "display": "Populate Me"
                        }
                      ],
                      "type": "SingleLineText",
                      "validation": {
                        "rules": [
                          {
                            "rule": "Not Implemented",
                            "error": [
                              {
                                "culture": "en-GB",
                                "display": "Not Implemented"
                              }
                            ]
                          }
                        ],
                        "regexs": [
                          {
                            "rule": "Not Implemented",
                            "error": [
                              {
                                "culture": "en-GB",
                                "display": "Not Implemented"
                              }
                            ]
                          }
                        ]
                      },
                      "help": [
                        {
                          "culture": "en-GB",
                          "display": "Help Me"
                        }
                      ],
                      "options": [
                        {
                          "id": "ac448299-751a-4df8-bbec-e3f2cf42a9e5",
                          "input": [
                            {
                              "culture": "en-GB",
                              "display": "Option 1"
                            }
                          ],
                          "value": "1"
                        }
                      ],
                      "consumableClaimName": "ConsumeMeAsAClaim",
                      "publishableClaimName": "PublishableClaimName",
                      "publishableAttestationName": "PublishableAttestationName",
                      "consumableAttestationName": "ConsumeMeAsAnAttestation",
                      "consumers": [
                        "ce800fea-f80b-4b21-b5b2-3889fe032338"
                      ],
                      "tags": []
                    }
                  ],
                  "steps": [
                    {
                      "id": "8f548324-129f-48dd-b2aa-9d2add240294",
                      "title": [
                        {
                          "culture": "en-GB",
                          "display": "Step Title"
                        }
                      ],
                      "guidanceNotes": [
                        {
                          "culture": "en-GB",
                          "display": "Guidane Notes"
                        }
                      ],
                      "fields": [
                        "92057ef9-ac29-49c6-b0eb-91fe5a6db8a1"
                      ],
                      "contributor": "0c8e3768-1946-4076-a48c-f9fdf467d6ba",
                      "isSingleUserWallet": false,
                      "sections": [
                        {
                          "id": "cc79572b-8129-4f21-a0d3-07be23ed53b6",
                          "field_ids": [
                            "92057ef9-ac29-49c6-b0eb-91fe5a6db8a1"
                          ]
                        }
                      ]
                    }
                  ],
                  "actors": [
                    {
                      "id": "0c8e3768-1946-4076-a48c-f9fdf467d6ba",
                      "name": "_siccar_actor_wallet_actor1"
                    }
                  ],
                  "archived": false,
                  "commentaryIsPublic": true,
                  "publicIdentifierFieldIds": [],
                  "parentSchemaIds": []
                },
                "processInstanceId": "1ad814bd9b903bb874ebd151b65e2583d88934ce781c29dfd00962d134067ba7",
                "stepStatuses": [
                  {
                    "stepTransactionId": "9a8ef1a4ae540fba76900fd02ee41d239f03fbcd857b8e8ce2eaf5e64cb0fd7e",
                    "stepIndex": 0,
                    "stepTitle": "Step 1",
                    "completionTime": 1369577597
                  },
                  {
                    "stepTransactionId": "ca740cddd8a39a925cded068ad5fb2c480cb6df3762e6f77ea08b9aca55225a1",
                    "stepIndex": 1,
                    "stepTitle": "Step 2",
                    "completionTime": 1569577597
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Caller is not authenticated."
          }
        }
      }
    },
    "/registers/{registerId}/storage/documents/{transactionId}": {
      "get": {
        "tags": [
          "Executor"
        ],
        "summary": "Retrieve a document that has been previously written to the ledger.",
        "description": "Document ids are not the same as step ids.  Each document in a step is stored in different transaction and then linked to the step transaction.",
        "operationId": "GetDocumentById",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "description": "The transaction id that the document has been stored in.",
            "required": true,
            "type": "string"
          },
          {
            "name": "registerId",
            "in": "path",
            "description": "The register the document has been saved to.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The document has been found and returned successfully.",
            "schema": {
              "$ref": "#/definitions/FileContentResult"
            }
          },
          "400": {
            "description": "The request is invalid."
          },
          "401": {
            "description": "Caller is not authenticated."
          },
          "404": {
            "description": "No document (transcation) exists with provided id."
          }
        }
      }
    },
    "/registers/{registerId}/processes": {
      "post": {
        "tags": [
          "Executor"
        ],
        "summary": "Create a new instance of a proceess schema on the ledger.",
        "description": "This will result in the first actor in the process being sent the first step to complete.",
        "operationId": "StartProcess",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "registerId",
            "in": "path",
            "description": "The id of the register.",
            "required": true,
            "type": "string"
          },
          {
            "name": "processStartRequestModel",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ProcessStartRequestModel"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The process has been started.",
            "schema": {
              "$ref": "#/definitions/ProcessStep"
            },
            "examples": {
              "application/json": {
                "stepId": "e6a7348c-6de5-41de-b365-07cc6fc5bab0",
                "previousStepId": "f1b16b7d-9355-4894-a4af-0419033004f8",
                "actors": {
                  "current": "ce4948c0-4c42-4b22-adbf-3ad5598e6f99",
                  "next": "46e63a08-af2f-4efe-b69b-765a3a8413a6"
                },
                "processStepSummary": {
                  "stepId": "e6a7348c-6de5-41de-b365-07cc6fc5bab0",
                  "previousStepId": "f1b16b7d-9355-4894-a4af-0419033004f8",
                  "timestamp": 0,
                  "schemaId": "2ce77275-334d-43b5-af08-b1133ee2d703",
                  "schemaStepId": "f1b16b7d-9355-4894-a4af-0419033004f8",
                  "nextSchemaStepId": "780067b6-b0ee-4460-92f7-8891c2e3af8d",
                  "nextStepIsLast": true,
                  "isStepRejection": false,
                  "isStepProcessDisposal": false,
                  "isSubmittedWithStepComment": true,
                  "schemaVersion": "1ad814bd9b903bb874ebd151b65e2583d88934ce781c29dfd00962d134067ba7",
                  "instanceId": "e8792556-895f-46da-8bbf-2f4d80051ef1",
                  "processIsComplete": false,
                  "actorId": "cef9bafb-959e-4b54-a4fa-ae9ff20ebe72",
                  "initialActorId": "e3624d1c-6543-41e7-91d6-7be1248f3213",
                  "currentStepIndex": 2,
                  "commentaryIsPublic": true
                },
                "fields": {
                  "public": [
                    {
                      "id": "f011136a-0dd8-4a22-9acc-e7292050c9bb",
                      "value": "public data"
                    }
                  ],
                  "private": [
                    {
                      "actorId": "ce4948c0-4c42-4b22-adbf-3ad5598e6f99",
                      "fields": [
                        {
                          "id": "4d9cf86c-8e5d-4870-baf0-43570de0084e",
                          "value": "data to be encrypted"
                        }
                      ]
                    }
                  ]
                },
                "commentHistories": [
                  {
                    "sendingStepSchemaId": "f1b16b7d-9355-4894-a4af-0419033004f8",
                    "recievingStepSchemaId": "7e61653a-caf2-4310-905b-293707ccb710",
                    "stepComment": "Please resubmit with todays date",
                    "sendingActorId": "cef9bafb-959e-4b54-a4fa-ae9ff20ebe72",
                    "timestamp": 1569590421
                  }
                ]
              }
            }
          },
          "400": {
            "description": "A bad request was received."
          },
          "401": {
            "description": "Caller is not authenticated."
          }
        }
      }
    },
    "/registers/{registerId}/processes/available": {
      "get": {
        "tags": [
          "Executor"
        ],
        "summary": "Returns the processes that are available to be started by the user.",
        "description": "There are two cases where a process can be started by the caller. \r\n1. The actor for step 1 of the schema is SingleUserWallet.\r\n2. The caller is a member of group wallet for Step 1 of the schema.",
        "operationId": "GetAvailableProcesses",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "registerId",
            "in": "path",
            "description": "The id of the register.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The processes available to start were returned.",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProcessSchemaSummary"
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": "f699feaa-593d-4782-8503-fa284a5fee13",
                  "title": "A Process Schema",
                  "description": "This is a process schema description",
                  "version": "1ad814bd9b903bb874ebd151b65e2583d88934ce781c29dfd00962d134067ba7",
                  "archived": false
                }
              ]
            }
          },
          "401": {
            "description": "Caller is not authenticated."
          }
        }
      }
    },
    "/registers/{registerId}/process-instances": {
      "get": {
        "tags": [
          "Executor"
        ],
        "summary": "Return all process instances for the supplied schema ids.",
        "operationId": "QueryProcessInstances",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "registerId",
            "in": "path",
            "description": "The registerId to find the instances from.",
            "required": true,
            "type": "string"
          },
          {
            "name": "schemaIds",
            "in": "query",
            "description": "Comma separated list of schemas to return the instances for.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Search results returned successfully.",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProcessInstance"
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": "83ef6d6f-a748-44c9-ae23-1ffae9b13a60",
                  "schemaId": "ae1a838d-aee4-4d0b-862c-08c6a0f1436a",
                  "schemaVersionId": "9ed150cf4b51bb25565d84c3f06afcdd8ec61f417d38bf0d1d1a376366b22f27",
                  "schemaTitle": "Motor Parts Supply Chain",
                  "stepZeroTxId": "40690c3576c39ef85216354a1060b1f71ac5e8b3feb2da48f9ce8ed18ad01b37",
                  "latestStepTxId": "a5537ad9043af0878036d4ffe85b11528af8ff22acef2e87e1b5738732f728e8",
                  "isComplete": false,
                  "publicIdentifier": "PO2356 • Harrogate Depot"
                },
                {
                  "id": "83ef6d6f-a748-44c9-ae23-1ffae9b13a60",
                  "schemaId": "ae1a838d-aee4-4d0b-862c-08c6a0f1436a",
                  "schemaVersionId": "05cf66f32fac9d888ad6b84504308f7b904b6cb3ca3b20fa8516487add0817c8",
                  "schemaTitle": "Motor Parts Supply Chain",
                  "stepZeroTxId": "82219af0deb437da449c631f560375fb55c05aa6bb0abd20940a679bdcda0615",
                  "latestStepTxId": "b21694a93f54d94e53bcab87eada8c444f713d650421a3cda950be87f978d217",
                  "isComplete": true,
                  "publicIdentifier": "PO2410 • London Depot"
                }
              ]
            }
          },
          "401": {
            "description": "Caller is not authenticated."
          }
        }
      }
    },
    "/registers/{registerId}/me": {
      "get": {
        "tags": [
          "Executor"
        ],
        "summary": "Return all claims and attestations",
        "operationId": "Me",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "registerId",
            "in": "path",
            "description": "The registerId to find the instances from.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Claim and attestation info."
          },
          "401": {
            "description": "Caller is not authenticated."
          }
        }
      }
    },
    "/registers/{registerId}/reporting/progress": {
      "get": {
        "tags": [
          "Executor"
        ],
        "summary": "Returns the current progress of all process instances started by the caller.",
        "description": "Includes process instances started by:\r\n- The callers single user wallet\r\n- A group wallet which the caller is a member of.",
        "operationId": "GetProcessProgressReports",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "registerId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The progress reports have been returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProcessProgressReport"
              }
            },
            "examples": {
              "application/json": [
                {
                  "schema": {
                    "id": "01ee0687-c2d5-406e-974b-d9226064b248",
                    "version": "1ad814bd9b903bb874ebd151b65e2583d88934ce781c29dfd00962d134067ba7",
                    "title": "A Schema Title",
                    "description": "A Schema Description",
                    "fields": [
                      {
                        "id": "768354a0-035a-45f3-b078-ecfa8b920275",
                        "isRequired": true,
                        "minLength": 1,
                        "maxLength": 500,
                        "isPublic": true,
                        "label": [
                          {
                            "culture": "en-GB",
                            "display": "Populate Me"
                          }
                        ],
                        "type": "SingleLineText",
                        "validation": {
                          "rules": [
                            {
                              "rule": "Not Implemented",
                              "error": [
                                {
                                  "culture": "en-GB",
                                  "display": "Not Implemented"
                                }
                              ]
                            }
                          ],
                          "regexs": [
                            {
                              "rule": "Not Implemented",
                              "error": [
                                {
                                  "culture": "en-GB",
                                  "display": "Not Implemented"
                                }
                              ]
                            }
                          ]
                        },
                        "help": [
                          {
                            "culture": "en-GB",
                            "display": "Help Me"
                          }
                        ],
                        "options": [
                          {
                            "id": "e5c7f6c9-3fe3-4443-b6f3-c85053af98a2",
                            "input": [
                              {
                                "culture": "en-GB",
                                "display": "Option 1"
                              }
                            ],
                            "value": "1"
                          }
                        ],
                        "consumableClaimName": "ConsumeMeAsAClaim",
                        "publishableClaimName": "PublishableClaimName",
                        "publishableAttestationName": "PublishableAttestationName",
                        "consumableAttestationName": "ConsumeMeAsAnAttestation",
                        "consumers": [
                          "18e6fc1f-7405-46f3-b06b-c5f0a452c824"
                        ],
                        "tags": []
                      }
                    ],
                    "steps": [
                      {
                        "id": "6c94c0a1-2990-418f-a8d5-dc45811493b9",
                        "title": [
                          {
                            "culture": "en-GB",
                            "display": "Step Title"
                          }
                        ],
                        "guidanceNotes": [
                          {
                            "culture": "en-GB",
                            "display": "Guidane Notes"
                          }
                        ],
                        "fields": [
                          "768354a0-035a-45f3-b078-ecfa8b920275"
                        ],
                        "contributor": "291dde46-3e8b-4440-88d8-2fee53ea7d6c",
                        "isSingleUserWallet": false,
                        "sections": [
                          {
                            "id": "bc516b60-74ec-411e-89c0-ba93a26adca8",
                            "field_ids": [
                              "768354a0-035a-45f3-b078-ecfa8b920275"
                            ]
                          }
                        ]
                      }
                    ],
                    "actors": [
                      {
                        "id": "291dde46-3e8b-4440-88d8-2fee53ea7d6c",
                        "name": "_siccar_actor_wallet_actor1"
                      }
                    ],
                    "archived": false,
                    "commentaryIsPublic": true,
                    "publicIdentifierFieldIds": [],
                    "parentSchemaIds": []
                  },
                  "processInstanceId": "1ad814bd9b903bb874ebd151b65e2583d88934ce781c29dfd00962d134067ba7",
                  "stepStatuses": [
                    {
                      "stepTransactionId": "9a8ef1a4ae540fba76900fd02ee41d239f03fbcd857b8e8ce2eaf5e64cb0fd7e",
                      "stepIndex": 0,
                      "stepTitle": "Step 1",
                      "completionTime": 1369577597
                    },
                    {
                      "stepTransactionId": "ca740cddd8a39a925cded068ad5fb2c480cb6df3762e6f77ea08b9aca55225a1",
                      "stepIndex": 1,
                      "stepTitle": "Step 2",
                      "completionTime": 1569577597
                    }
                  ]
                }
              ]
            }
          },
          "401": {
            "description": "Caller is not authenticated."
          }
        }
      }
    },
    "/registers/{registerId}/reporting/progress/{instanceId}": {
      "get": {
        "tags": [
          "Executor"
        ],
        "summary": "Returns the current progress of a single instance.",
        "operationId": "GetProcessProgressReport",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "registerId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The progress report have been returned",
            "schema": {
              "$ref": "#/definitions/ProcessProgressReport"
            },
            "examples": {
              "application/json": {
                "schema": {
                  "id": "90afe45a-8813-47c7-88e4-286ad3722f69",
                  "version": "1ad814bd9b903bb874ebd151b65e2583d88934ce781c29dfd00962d134067ba7",
                  "title": "A Schema Title",
                  "description": "A Schema Description",
                  "fields": [
                    {
                      "id": "7c770b2c-93c8-4063-b405-eb989cf615c4",
                      "isRequired": true,
                      "minLength": 1,
                      "maxLength": 500,
                      "isPublic": true,
                      "label": [
                        {
                          "culture": "en-GB",
                          "display": "Populate Me"
                        }
                      ],
                      "type": "SingleLineText",
                      "validation": {
                        "rules": [
                          {
                            "rule": "Not Implemented",
                            "error": [
                              {
                                "culture": "en-GB",
                                "display": "Not Implemented"
                              }
                            ]
                          }
                        ],
                        "regexs": [
                          {
                            "rule": "Not Implemented",
                            "error": [
                              {
                                "culture": "en-GB",
                                "display": "Not Implemented"
                              }
                            ]
                          }
                        ]
                      },
                      "help": [
                        {
                          "culture": "en-GB",
                          "display": "Help Me"
                        }
                      ],
                      "options": [
                        {
                          "id": "79a475d2-f727-4a06-804e-b3480c529c0f",
                          "input": [
                            {
                              "culture": "en-GB",
                              "display": "Option 1"
                            }
                          ],
                          "value": "1"
                        }
                      ],
                      "consumableClaimName": "ConsumeMeAsAClaim",
                      "publishableClaimName": "PublishableClaimName",
                      "publishableAttestationName": "PublishableAttestationName",
                      "consumableAttestationName": "ConsumeMeAsAnAttestation",
                      "consumers": [
                        "35225649-7d36-456a-b16e-54cdae6cb5b8"
                      ],
                      "tags": []
                    }
                  ],
                  "steps": [
                    {
                      "id": "0b084aa5-8f58-4d6f-982d-9f2fd9ac03b6",
                      "title": [
                        {
                          "culture": "en-GB",
                          "display": "Step Title"
                        }
                      ],
                      "guidanceNotes": [
                        {
                          "culture": "en-GB",
                          "display": "Guidane Notes"
                        }
                      ],
                      "fields": [
                        "7c770b2c-93c8-4063-b405-eb989cf615c4"
                      ],
                      "contributor": "0b502036-9317-49ca-8fc7-a8aae05a4ad4",
                      "isSingleUserWallet": false,
                      "sections": [
                        {
                          "id": "31e904e4-8da5-4d51-895f-d4f4077d07b3",
                          "field_ids": [
                            "7c770b2c-93c8-4063-b405-eb989cf615c4"
                          ]
                        }
                      ]
                    }
                  ],
                  "actors": [
                    {
                      "id": "0b502036-9317-49ca-8fc7-a8aae05a4ad4",
                      "name": "_siccar_actor_wallet_actor1"
                    }
                  ],
                  "archived": false,
                  "commentaryIsPublic": true,
                  "publicIdentifierFieldIds": [],
                  "parentSchemaIds": []
                },
                "processInstanceId": "1ad814bd9b903bb874ebd151b65e2583d88934ce781c29dfd00962d134067ba7",
                "stepStatuses": [
                  {
                    "stepTransactionId": "9a8ef1a4ae540fba76900fd02ee41d239f03fbcd857b8e8ce2eaf5e64cb0fd7e",
                    "stepIndex": 0,
                    "stepTitle": "Step 1",
                    "completionTime": 1369577597
                  },
                  {
                    "stepTransactionId": "ca740cddd8a39a925cded068ad5fb2c480cb6df3762e6f77ea08b9aca55225a1",
                    "stepIndex": 1,
                    "stepTitle": "Step 2",
                    "completionTime": 1569577597
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Caller is not authenticated."
          }
        }
      }
    },
    "/registers/{registerId}/process-schemas": {
      "get": {
        "tags": [
          "Designer"
        ],
        "summary": "Returns all saved, published and archived processes schema summaries.",
        "operationId": "GetAllProcesses",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "registerId",
            "in": "path",
            "description": "The register id to get processes from.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "All schemas have been returned successfully.",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProcessSchemaSummary"
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": "6017cc56-5100-4160-8970-cf0b14fc013d",
                  "title": "A Process Schema",
                  "description": "This is a process schema description",
                  "version": "1ad814bd9b903bb874ebd151b65e2583d88934ce781c29dfd00962d134067ba7",
                  "archived": false
                }
              ]
            }
          },
          "401": {
            "description": "Caller is not authenticated."
          },
          "403": {
            "description": "Caller is not authorised to call this endpoint."
          }
        }
      },
      "post": {
        "tags": [
          "Designer"
        ],
        "summary": "Saves the provided process schema.",
        "description": "If this is the first time saving the schema the id should be set to \"FFFFFFFF-FFFF-FFFF-FFFF-FFFFFFFFFFFF\", this will result in a new schema being saved.  Id an existing id is provided then any existing schema with the id will be updated.",
        "operationId": "SaveProcess",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "registerId",
            "in": "path",
            "description": "The register id to save the process to.",
            "required": true,
            "type": "string"
          },
          {
            "name": "schema",
            "in": "body",
            "description": "The Process Schema to be saved.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ProcessSchemaModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Process has been saved successfully."
          },
          "400": {
            "description": "Submitted schema is not valid for saving."
          },
          "401": {
            "description": "Caller is not authenticated."
          },
          "403": {
            "description": "Caller is not authorised to call this endpoint."
          }
        }
      }
    },
    "/registers/{registerId}/process-schemas/{id}": {
      "get": {
        "tags": [
          "Designer"
        ],
        "summary": "Returns the latest version of the schema, saved, published or archived, with the given id.",
        "description": "If the schema has been published it will return the latest published version.\r\nif it has not been published it will return the latest saved version",
        "operationId": "GetProcessById",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "registerId",
            "in": "path",
            "description": "The register id to fetch the process from.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id of the schema to fetch.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "All schemas have been returned",
            "schema": {
              "$ref": "#/definitions/ProcessSchemaModel"
            },
            "examples": {
              "application/json": {
                "id": "9a5ba9c9-f360-498a-a867-2087da12b65e",
                "version": "1ad814bd9b903bb874ebd151b65e2583d88934ce781c29dfd00962d134067ba7",
                "title": "A Schema Title",
                "description": "A Schema Description",
                "fields": [
                  {
                    "id": "c2dd20d7-1a80-4671-960b-4247eb9d5951",
                    "isRequired": true,
                    "minLength": 1,
                    "maxLength": 500,
                    "isPublic": true,
                    "label": [
                      {
                        "culture": "en-GB",
                        "display": "Populate Me"
                      }
                    ],
                    "type": "SingleLineText",
                    "validation": {
                      "rules": [
                        {
                          "rule": "Not Implemented",
                          "error": [
                            {
                              "culture": "en-GB",
                              "display": "Not Implemented"
                            }
                          ]
                        }
                      ],
                      "regexs": [
                        {
                          "rule": "Not Implemented",
                          "error": [
                            {
                              "culture": "en-GB",
                              "display": "Not Implemented"
                            }
                          ]
                        }
                      ]
                    },
                    "help": [
                      {
                        "culture": "en-GB",
                        "display": "Help Me"
                      }
                    ],
                    "options": [
                      {
                        "id": "62e7a1b1-03e5-47a1-b196-e74d550b6e9f",
                        "input": [
                          {
                            "culture": "en-GB",
                            "display": "Option 1"
                          }
                        ],
                        "value": "1"
                      }
                    ],
                    "consumableClaimName": "ConsumeMeAsAClaim",
                    "publishableClaimName": "PublishableClaimName",
                    "publishableAttestationName": "PublishableAttestationName",
                    "consumableAttestationName": "ConsumeMeAsAnAttestation",
                    "consumers": [
                      "a5b80a31-ec19-4dec-aac0-18a75b02ab7d"
                    ],
                    "tags": []
                  }
                ],
                "steps": [
                  {
                    "id": "a3514ef2-3a35-41f0-8241-3a3fa2694500",
                    "title": [
                      {
                        "culture": "en-GB",
                        "display": "Step Title"
                      }
                    ],
                    "guidanceNotes": [
                      {
                        "culture": "en-GB",
                        "display": "Guidane Notes"
                      }
                    ],
                    "fields": [
                      "c2dd20d7-1a80-4671-960b-4247eb9d5951"
                    ],
                    "contributor": "8dc1c400-a685-4d30-b9a6-00a8b17c07ce",
                    "isSingleUserWallet": false,
                    "sections": [
                      {
                        "id": "dacad8b2-e893-4c2d-a7a6-178a15ebbef3",
                        "field_ids": [
                          "c2dd20d7-1a80-4671-960b-4247eb9d5951"
                        ]
                      }
                    ]
                  }
                ],
                "actors": [
                  {
                    "id": "8dc1c400-a685-4d30-b9a6-00a8b17c07ce",
                    "name": "_siccar_actor_wallet_actor1"
                  }
                ],
                "archived": false,
                "commentaryIsPublic": true,
                "publicIdentifierFieldIds": [],
                "parentSchemaIds": []
              }
            }
          },
          "400": {
            "description": "The request is invalid."
          },
          "401": {
            "description": "Caller is not authenticated."
          },
          "403": {
            "description": "Caller is not authorised to call this endpoint."
          }
        }
      },
      "delete": {
        "tags": [
          "Designer"
        ],
        "summary": "Delete a saved process schema.",
        "description": "This is irreversible.  Only schemas that have not yet been published can be saved.",
        "operationId": "Delete",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "registerId",
            "in": "path",
            "description": "The register id to delete the process from.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id of the schema to delete",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "The schema has been deleted successfully."
          },
          "400": {
            "description": "The request is invalid."
          },
          "401": {
            "description": "User is not authenticated to call this endpoint."
          },
          "403": {
            "description": "User is not authorised to call this endpoint."
          }
        }
      }
    },
    "/registers/{registerId}/storage/schemas/{schemaVersionId}": {
      "get": {
        "tags": [
          "Executor"
        ],
        "summary": "Returns the process schema for the given version ID",
        "operationId": "GetSchemaByVersion",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "registerId",
            "in": "path",
            "description": "The register id to fetch the process from.",
            "required": true,
            "type": "string"
          },
          {
            "name": "schemaVersionId",
            "in": "path",
            "description": "The version id of the process to fetch.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The schema with the given version.",
            "schema": {
              "$ref": "#/definitions/ProcessSchemaModel"
            },
            "examples": {
              "application/json": {
                "id": "2674e5d3-44cc-4a05-b6e3-eb66f05c8738",
                "version": "1ad814bd9b903bb874ebd151b65e2583d88934ce781c29dfd00962d134067ba7",
                "title": "A Schema Title",
                "description": "A Schema Description",
                "fields": [
                  {
                    "id": "eec26a3c-a20b-4e3d-9b4b-b8a1f82dc0c3",
                    "isRequired": true,
                    "minLength": 1,
                    "maxLength": 500,
                    "isPublic": true,
                    "label": [
                      {
                        "culture": "en-GB",
                        "display": "Populate Me"
                      }
                    ],
                    "type": "SingleLineText",
                    "validation": {
                      "rules": [
                        {
                          "rule": "Not Implemented",
                          "error": [
                            {
                              "culture": "en-GB",
                              "display": "Not Implemented"
                            }
                          ]
                        }
                      ],
                      "regexs": [
                        {
                          "rule": "Not Implemented",
                          "error": [
                            {
                              "culture": "en-GB",
                              "display": "Not Implemented"
                            }
                          ]
                        }
                      ]
                    },
                    "help": [
                      {
                        "culture": "en-GB",
                        "display": "Help Me"
                      }
                    ],
                    "options": [
                      {
                        "id": "539d0a60-0a40-4b9f-9ce7-24545bbd2b5a",
                        "input": [
                          {
                            "culture": "en-GB",
                            "display": "Option 1"
                          }
                        ],
                        "value": "1"
                      }
                    ],
                    "consumableClaimName": "ConsumeMeAsAClaim",
                    "publishableClaimName": "PublishableClaimName",
                    "publishableAttestationName": "PublishableAttestationName",
                    "consumableAttestationName": "ConsumeMeAsAnAttestation",
                    "consumers": [
                      "dbb0b520-e1d8-438d-a82e-eda19b7f194d"
                    ],
                    "tags": []
                  }
                ],
                "steps": [
                  {
                    "id": "17c469a7-f529-4044-a846-fdcdd1aed73f",
                    "title": [
                      {
                        "culture": "en-GB",
                        "display": "Step Title"
                      }
                    ],
                    "guidanceNotes": [
                      {
                        "culture": "en-GB",
                        "display": "Guidane Notes"
                      }
                    ],
                    "fields": [
                      "eec26a3c-a20b-4e3d-9b4b-b8a1f82dc0c3"
                    ],
                    "contributor": "5fd3dd15-e1bb-46f9-b06a-c3e663c8e77d",
                    "isSingleUserWallet": false,
                    "sections": [
                      {
                        "id": "870e0aea-9e9a-47e1-abc3-83cf444e81ab",
                        "field_ids": [
                          "eec26a3c-a20b-4e3d-9b4b-b8a1f82dc0c3"
                        ]
                      }
                    ]
                  }
                ],
                "actors": [
                  {
                    "id": "5fd3dd15-e1bb-46f9-b06a-c3e663c8e77d",
                    "name": "_siccar_actor_wallet_actor1"
                  }
                ],
                "archived": false,
                "commentaryIsPublic": true,
                "publicIdentifierFieldIds": [],
                "parentSchemaIds": []
              }
            }
          },
          "401": {
            "description": "Caller is not authenticated."
          },
          "404": {
            "description": "The schema with the given version could not be found."
          }
        }
      }
    },
    "/registers/{registerId}/process-schemas-claims": {
      "get": {
        "tags": [
          "Designer"
        ],
        "summary": "Get all publishable claims from all published schemas.",
        "operationId": "GetAllProcessSchemaPublishableClaims",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "registerId",
            "in": "path",
            "description": "The register id to fetch processes from.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The claims have been returned successfully.",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProcessSchemaPublishableClaim"
              }
            },
            "examples": {
              "application/json": [
                {
                  "publishableClaimName": "Publishable Claim Name",
                  "fieldType": 1
                }
              ]
            }
          },
          "401": {
            "description": "Caller is not authenticated."
          },
          "403": {
            "description": "Caller is not authorised to call this endpoint."
          }
        }
      }
    },
    "/registers/{registerId}/process-schemas-attestations": {
      "get": {
        "tags": [
          "Designer"
        ],
        "summary": "Get all publishable attestations from all published schemas.",
        "operationId": "GetAllProcessSchemaPublishableAttestations",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "registerId",
            "in": "path",
            "description": "The register id to fetch processes from.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The attestations have been returned successfully.",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProcessSchemaPublishableAttestation"
              }
            },
            "examples": {
              "application/json": [
                {
                  "publishableAttestationName": "Attestation Name",
                  "fieldType": 1
                }
              ]
            }
          },
          "401": {
            "description": "Caller is not authenticated."
          },
          "403": {
            "description": "Caller is not authorised to call this endpoint."
          }
        }
      }
    },
    "/registers/{registerId}/process-schemas/publish": {
      "post": {
        "tags": [
          "Designer"
        ],
        "summary": "Publish a provided schema so that instances can be started and executed.",
        "operationId": "Publish",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "registerId",
            "in": "path",
            "description": "The register id to publish the process to.",
            "required": true,
            "type": "string"
          },
          {
            "name": "schema",
            "in": "body",
            "description": "The schema to publish",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ProcessSchemaModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The schema has been published succesfully."
          },
          "400": {
            "description": "The schema is not valid for publishing."
          },
          "401": {
            "description": "Caller is not authenticated."
          },
          "403": {
            "description": "Caller is not authorised to call this endpoint."
          }
        }
      }
    },
    "/registers/{registerId}/public-data": {
      "get": {
        "tags": [
          "Executor"
        ],
        "summary": "Query public data added in all steps.",
        "description": "",
        "operationId": "QueryPublicData",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "registerId",
            "in": "path",
            "description": "The register to search in.",
            "required": true,
            "type": "string"
          },
          {
            "name": "querystring",
            "in": "query",
            "description": "The string to search for.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Search results returned successfully.",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/PublicProcessDataSearchResult"
              }
            },
            "examples": {
              "application/json": [
                {
                  "transactionHash": "1ad814bd9b903bb874ebd151b65e2583d88934ce781c29dfd00962d134067ba7",
                  "schemaTitle": "Schema Title",
                  "matches": [
                    {
                      "fieldOrStepTitle": "Step 1",
                      "value": "Matched String"
                    }
                  ]
                }
              ]
            }
          },
          "401": {
            "description": "Caller is not authenticated."
          }
        }
      }
    },
    "/registers/{registerId}/steps/next": {
      "get": {
        "tags": [
          "Executor"
        ],
        "summary": "Returns the actions that are currently available for the caller to complete.",
        "operationId": "GetNextSteps",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "registerId",
            "in": "path",
            "description": "The id of the register.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The next available actions have been returned to the caller",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/RequiredStep"
              }
            },
            "examples": {
              "application/json": [
                {
                  "summary": {
                    "title": [
                      {
                        "culture": "en-GB",
                        "display": "Title"
                      }
                    ],
                    "guidanceNotes": [
                      {
                        "culture": "en-GB",
                        "display": "Guidance Notes"
                      }
                    ],
                    "schemaId": "c50d2c64-f30f-4f84-9d84-80695a182ebb",
                    "schemaVersionId": "1ad814bd9b903bb874ebd151b65e2583d88934ce781c29dfd00962d134067ba7",
                    "schemaStepIndex": 0,
                    "processInstanceId": "ff367042-8ae4-4415-a7c7-c904e0fd56c0",
                    "previousStepId": "af5cd23a-fbfd-40b7-b2d6-07a0361df0fd",
                    "schemaTitle": "Schema Title",
                    "commentaryIsPublic": false,
                    "isLastStep": false
                  },
                  "fields": {
                    "target": [
                      {
                        "schemaField": {
                          "id": "1c901e23-a9c0-406c-96ba-ed54dceaf1d1",
                          "isRequired": true,
                          "minLength": 1,
                          "maxLength": 500,
                          "isPublic": true,
                          "label": [
                            {
                              "culture": "en-GB",
                              "display": "Populate Me"
                            }
                          ],
                          "type": "SingleLineText",
                          "validation": {
                            "rules": [
                              {
                                "rule": "Not Implemented",
                                "error": [
                                  {
                                    "culture": "en-GB",
                                    "display": "Not Implemented"
                                  }
                                ]
                              }
                            ],
                            "regexs": [
                              {
                                "rule": "Not Implemented",
                                "error": [
                                  {
                                    "culture": "en-GB",
                                    "display": "Not Implemented"
                                  }
                                ]
                              }
                            ]
                          },
                          "help": [
                            {
                              "culture": "en-GB",
                              "display": "Help Me"
                            }
                          ],
                          "options": [
                            {
                              "id": "81a28bd7-4dcb-4c5f-9fad-1eadb70606fc",
                              "input": [
                                {
                                  "culture": "en-GB",
                                  "display": "Option 1"
                                }
                              ],
                              "value": "1"
                            }
                          ],
                          "consumableClaimName": "ConsumeMeAsAClaim",
                          "publishableClaimName": "PublishableClaimName",
                          "publishableAttestationName": "PublishableAttestationName",
                          "consumableAttestationName": "ConsumeMeAsAnAttestation",
                          "consumers": [
                            "9b5f93ae-0a6f-497f-bbcb-7ce2137b23ae"
                          ],
                          "tags": []
                        },
                        "mostRecentValue": "MostRecentValue",
                        "mostRecentlyRejectedValue": "MostRecentlyRejectedValue"
                      }
                    ],
                    "fulfilled": [
                      {
                        "id": "0a63a6f1-c4d3-473f-a027-5189ecad554d",
                        "label": [
                          {
                            "culture": "en-GB",
                            "display": "Enter Data"
                          }
                        ],
                        "type": "SingleLineText",
                        "value": "Test",
                        "help": [
                          {
                            "culture": "en-GB",
                            "display": "Help Me"
                          }
                        ]
                      }
                    ]
                  },
                  "sections": [
                    {
                      "id": "9db15623-298d-472b-af3e-9eb33de26c25",
                      "field_ids": [
                        "c4057277-3856-4c35-bd6d-d9d8e08e27b9"
                      ]
                    }
                  ],
                  "comments": [
                    {
                      "sendingActorName": "0731da30-28c6-43f6-b60a-1a3c1068e83a",
                      "receivingActorName": "You",
                      "commentText": "Hello",
                      "isReceivedComment": true
                    }
                  ],
                  "wasPreviouslyRejected": false,
                  "wasSubmittedWithComment": false
                }
              ]
            }
          },
          "401": {
            "description": "The caller is not authenticated."
          }
        }
      }
    },
    "/registers/{registerId}/steps/{id}/next": {
      "get": {
        "tags": [
          "Executor"
        ],
        "summary": "Returns a required step given the id of a previously completed step.",
        "description": "A required step contains the fields that need to be completd when submitted the step.",
        "operationId": "GetNextStep",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "registerId",
            "in": "path",
            "description": "The id of the register.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id of the previously completed step to return the next require step for.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The required step has be succesfully built.",
            "schema": {
              "$ref": "#/definitions/RequiredStep"
            },
            "examples": {
              "application/json": {
                "summary": {
                  "title": [
                    {
                      "culture": "en-GB",
                      "display": "Title"
                    }
                  ],
                  "guidanceNotes": [
                    {
                      "culture": "en-GB",
                      "display": "Guidance Notes"
                    }
                  ],
                  "schemaId": "dedcd81d-b8f6-4915-afa7-c9f239d86b01",
                  "schemaVersionId": "1ad814bd9b903bb874ebd151b65e2583d88934ce781c29dfd00962d134067ba7",
                  "schemaStepIndex": 0,
                  "processInstanceId": "534cdacd-7c6d-48a2-b12b-f392d29d903b",
                  "previousStepId": "dc8df358-1b7b-4b94-87b2-58db9d8ae442",
                  "schemaTitle": "Schema Title",
                  "commentaryIsPublic": false,
                  "isLastStep": false
                },
                "fields": {
                  "target": [
                    {
                      "schemaField": {
                        "id": "67ca7ed0-a7e5-4dd0-bf9e-8a7104ece2ca",
                        "isRequired": true,
                        "minLength": 1,
                        "maxLength": 500,
                        "isPublic": true,
                        "label": [
                          {
                            "culture": "en-GB",
                            "display": "Populate Me"
                          }
                        ],
                        "type": "SingleLineText",
                        "validation": {
                          "rules": [
                            {
                              "rule": "Not Implemented",
                              "error": [
                                {
                                  "culture": "en-GB",
                                  "display": "Not Implemented"
                                }
                              ]
                            }
                          ],
                          "regexs": [
                            {
                              "rule": "Not Implemented",
                              "error": [
                                {
                                  "culture": "en-GB",
                                  "display": "Not Implemented"
                                }
                              ]
                            }
                          ]
                        },
                        "help": [
                          {
                            "culture": "en-GB",
                            "display": "Help Me"
                          }
                        ],
                        "options": [
                          {
                            "id": "158c1ed2-213b-432a-8b21-913ef3be8e75",
                            "input": [
                              {
                                "culture": "en-GB",
                                "display": "Option 1"
                              }
                            ],
                            "value": "1"
                          }
                        ],
                        "consumableClaimName": "ConsumeMeAsAClaim",
                        "publishableClaimName": "PublishableClaimName",
                        "publishableAttestationName": "PublishableAttestationName",
                        "consumableAttestationName": "ConsumeMeAsAnAttestation",
                        "consumers": [
                          "5b095d82-5b54-4be5-945a-423c3651a460"
                        ],
                        "tags": []
                      },
                      "mostRecentValue": "MostRecentValue",
                      "mostRecentlyRejectedValue": "MostRecentlyRejectedValue"
                    }
                  ],
                  "fulfilled": [
                    {
                      "id": "0a63a6f1-c4d3-473f-a027-5189ecad554d",
                      "label": [
                        {
                          "culture": "en-GB",
                          "display": "Enter Data"
                        }
                      ],
                      "type": "SingleLineText",
                      "value": "Test",
                      "help": [
                        {
                          "culture": "en-GB",
                          "display": "Help Me"
                        }
                      ]
                    }
                  ]
                },
                "sections": [
                  {
                    "id": "e6f865aa-a9c7-4acd-a5f4-5bff961e82cb",
                    "field_ids": [
                      "c6d2fb18-4ebe-4502-84e8-477c0f55c6d2"
                    ]
                  }
                ],
                "comments": [
                  {
                    "sendingActorName": "0731da30-28c6-43f6-b60a-1a3c1068e83a",
                    "receivingActorName": "You",
                    "commentText": "Hello",
                    "isReceivedComment": true
                  }
                ],
                "wasPreviouslyRejected": false,
                "wasSubmittedWithComment": false
              }
            }
          },
          "400": {
            "description": "A bad request was received."
          },
          "401": {
            "description": "The caller is not authenticated."
          },
          "403": {
            "description": "The caller is not authorized to call this endpoint."
          }
        }
      },
      "post": {
        "tags": [
          "Executor"
        ],
        "summary": "Submit a step fullfilment for a step in a process instance.",
        "description": "This will result in the actor for the next step in the process getting an action.",
        "operationId": "SubmitStepFulfillment",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "registerId",
            "in": "path",
            "description": "The id of the register.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id of the preevious step in the process instance.",
            "required": true,
            "type": "string"
          },
          {
            "name": "stepFulfillment",
            "in": "body",
            "description": "The completed step fulfillment.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/StepFulfillment"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "A bad request was received."
          },
          "401": {
            "description": "Caller is not authenticated."
          },
          "403": {
            "description": "Caller is not authorized to call this endpoint."
          },
          "202": {
            "description": "The fulfillment has been submited successfully."
          }
        }
      }
    },
    "/registers/{registerId}/steps/{id}/save-next": {
      "post": {
        "tags": [
          "Executor"
        ],
        "summary": "Allows a step fulfilment to to be saved for later submission.",
        "description": "When you retrieve the required step from the GET steps/{id}/next endpoint, any saved step data will be included as the \"mostRecentValue\" against the target fields.",
        "operationId": "SaveStepFulfillment",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "registerId",
            "in": "path",
            "description": "The id of the register.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id of the previous step.",
            "required": true,
            "type": "string"
          },
          {
            "name": "stepFulfillment",
            "in": "body",
            "description": "The step fulfillment to save.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/StepFulfillment"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Step has been saved successfully."
          },
          "400": {
            "description": "A bad request was received."
          },
          "401": {
            "description": "Caller is not authenticated."
          },
          "403": {
            "description": "Caller is not authorized to call this endpoint."
          }
        }
      }
    },
    "/registers/{registerId}/steps/{id}/reject": {
      "post": {
        "tags": [
          "Executor"
        ],
        "summary": "Submit a step rejection for a step in a process instance.",
        "description": "This results in the actor for the previous step getting an action.",
        "operationId": "SubmitStepRejection",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "registerId",
            "in": "path",
            "description": "The id of the register.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id of the step that is being rejected.",
            "required": true,
            "type": "string"
          },
          {
            "name": "stepRejection",
            "in": "body",
            "description": "Contains an optional comment as to why the step is being rejected.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/StepRejection"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Returns a confirmation that the request has been accepted"
          },
          "400": {
            "description": "A bad request was received."
          },
          "401": {
            "description": "User is not authenticated to call this endpoint."
          },
          "403": {
            "description": "User is not authorized to call this endpoint."
          }
        }
      }
    },
    "/registers/{registerId}/steps/{id}/dispose-process": {
      "post": {
        "tags": [
          "Executor"
        ],
        "summary": "Submit a cancellation request so that the process instance is not continued.",
        "description": "This is irreversible, i.e. once a process has been cancelled there is no way of continuing it.\r\nA process can only be cancelled from the first step.\r\nNo data will be deleted i.e. all previous transactions will still be viewable and public data in them will still be searchable.\r\nThe step will be sent to a dead letter wallet so that no actors in the system have an action for the process instance.",
        "operationId": "SubmitProcessCancellation",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "registerId",
            "in": "path",
            "description": "The id of the register.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id of the process to dispose of",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "The process has been successfully canceled."
          },
          "400": {
            "description": "A bad request was received."
          },
          "401": {
            "description": "Caller is not authenticated."
          },
          "403": {
            "description": "Caller is not authorized to call this endpoint."
          }
        }
      }
    },
    "/registers/{registerId}/transactions/{id}": {
      "get": {
        "tags": [
          "Executor"
        ],
        "summary": "Get a transaction by id.",
        "operationId": "GetTransactionById",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The transaction id to look for.",
            "required": true,
            "type": "string"
          },
          {
            "name": "registerId",
            "in": "path",
            "description": "The register the transaction is saved on.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The transaction has been found and returned.",
            "schema": {
              "$ref": "#/definitions/TransactionReport"
            },
            "examples": {
              "application/json": {
                "summary": {
                  "timestamp": 1570111988,
                  "id": "f4fa20a5-1372-48c5-aa93-e389c742dee7",
                  "sender": "a6ab6fde-8d37-4521-83bb-c79e50ba64e7",
                  "recipient": "f7c5a9b0-40e1-453c-8e7b-a0eee7854c7f",
                  "previous": [
                    "a1075db55d416d3ca199f55b6084e2115b9345e16c5cf302fc80e9d5fbf5d48d"
                  ],
                  "previousDataTxId": "a1075db55d416d3ca199f55b6084e2115b9345e16c5cf302fc80e9d5fbf5d48d",
                  "isCoinbase": false
                },
                "nextTransactionId": "1ad814bd9b903bb874ebd151b65e2583d88934ce781c29dfd00962d134067ba7",
                "payload": {
                  "public": {
                    "originalJson": "{}",
                    "fields": [
                      {
                        "id": "a07021a8-594d-4dc1-b6ff-46c282447c65",
                        "label": [
                          {
                            "culture": "en-GB",
                            "display": "Please enter name"
                          }
                        ],
                        "type": "SingleLineText",
                        "value": "Stewart"
                      }
                    ]
                  },
                  "private": [
                    {
                      "actorId": "f7c5a9b0-40e1-453c-8e7b-a0eee7854c7f",
                      "actorName": "_siccar_actor_wallet_first_actor",
                      "originalPayloads": [],
                      "fields": [
                        {
                          "id": "a07021a8-594d-4dc1-b6ff-46c282447c65",
                          "label": [
                            {
                              "culture": "en-GB",
                              "display": "Please enter name"
                            }
                          ],
                          "type": "SingleLineText",
                          "value": "Stewart"
                        }
                      ],
                      "isDecrypted": false
                    }
                  ]
                },
                "stepComments": [
                  {
                    "sendingActorName": "a6ab6fde-8d37-4521-83bb-c79e50ba64e7",
                    "receivingActorName": "f7c5a9b0-40e1-453c-8e7b-a0eee7854c7f",
                    "commentText": "I am a comment",
                    "isDecrypted": true,
                    "rawData": "Raw Data",
                    "isPublicComment": true,
                    "timestamp": 1570111988
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Supplied id is not valid transaction id."
          },
          "401": {
            "description": "Caller is not authenticated."
          },
          "404": {
            "description": "A transaction matching the ID could not be found."
          }
        }
      }
    }
  },
  "definitions": {
    "InstanceDocumentProgress": {
      "type": "object",
      "properties": {
        "instanceId": {
          "type": "string"
        },
        "parentId": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "uniqueInstanceId": {
          "type": "string"
        },
        "nextSchemaStepId": {
          "type": "string"
        },
        "processIsComplete": {
          "type": "boolean"
        },
        "documentStatuses": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentStatus"
          }
        },
        "firstStepPublicFields": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/FirstStepPublicField"
          }
        }
      }
    },
    "DocumentStatus": {
      "type": "object",
      "properties": {
        "schemaFieldId": {
          "type": "string"
        },
        "schemaFieldLabel": {
          "type": "string"
        },
        "transactionId": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "isUploaded": {
          "type": "boolean"
        },
        "isRequired": {
          "type": "boolean"
        },
        "tags": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "FirstStepPublicField": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "type": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "type": "integer"
        }
      }
    },
    "FileContentResult": {
      "type": "object",
      "properties": {
        "fileContents": {
          "format": "byte",
          "type": "string"
        },
        "contentType": {
          "type": "string",
          "readOnly": true
        },
        "fileDownloadName": {
          "type": "string"
        },
        "lastModified": {
          "format": "date-time",
          "type": "string"
        },
        "entityTag": {
          "$ref": "#/definitions/EntityTagHeaderValue"
        },
        "enableRangeProcessing": {
          "type": "boolean"
        }
      }
    },
    "EntityTagHeaderValue": {
      "type": "object",
      "properties": {
        "tag": {
          "$ref": "#/definitions/StringSegment",
          "readOnly": true
        },
        "isWeak": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "StringSegment": {
      "type": "object",
      "properties": {
        "buffer": {
          "type": "string",
          "readOnly": true
        },
        "offset": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "length": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "value": {
          "type": "string",
          "readOnly": true
        },
        "hasValue": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "ProcessStartRequestModel": {
      "type": "object",
      "properties": {
        "schemaId": {
          "maxLength": 36,
          "minLength": 36,
          "pattern": "[a-fA-F0-9-]*",
          "type": "string"
        },
        "schemaVersionId": {
          "pattern": "^[a-fA-F0-9]*$",
          "type": "string"
        },
        "parentInstanceId": {
          "pattern": "[a-fA-F0-9-]*",
          "type": "string"
        }
      },
      "example": {
        "schemaId": "f2ecc5db-7f77-498d-856b-1f40de6273bb",
        "schemaVersionId": "1ad814bd9b903bb874ebd151b65e2583d88934ce781c29dfd00962d134067ba7",
        "parentInstanceId": "ed85742afb2299c91cfbdd6ed93469f6e0be7fc92050e530e34848a89d6e7612"
      }
    },
    "ProcessStep": {
      "type": "object",
      "properties": {
        "stepId": {
          "pattern": "^[a-fA-F0-9]*$",
          "type": "string"
        },
        "previousStepId": {
          "pattern": "^[a-fA-F0-9]*$",
          "type": "string"
        },
        "actors": {
          "$ref": "#/definitions/ProcessActors"
        },
        "processStepSummary": {
          "$ref": "#/definitions/ProcessStepSummary"
        },
        "fields": {
          "$ref": "#/definitions/FieldAssignments"
        },
        "commentHistories": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessStepCommentHistory"
          }
        },
        "documentTransactionIds": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ProcessActors": {
      "type": "object",
      "properties": {
        "current": {
          "maxLength": 36,
          "minLength": 36,
          "pattern": "[a-fA-F0-9-]*",
          "type": "string"
        },
        "next": {
          "maxLength": 36,
          "minLength": 36,
          "pattern": "[a-fA-F0-9-]*",
          "type": "string"
        }
      }
    },
    "ProcessStepSummary": {
      "type": "object",
      "properties": {
        "stepId": {
          "maxLength": 36,
          "minLength": 36,
          "pattern": "[a-fA-F0-9-]*",
          "type": "string"
        },
        "previousStepId": {
          "maxLength": 36,
          "minLength": 36,
          "pattern": "[a-fA-F0-9-]*",
          "type": "string"
        },
        "timestamp": {
          "format": "int32",
          "type": "integer"
        },
        "schemaId": {
          "maxLength": 36,
          "minLength": 36,
          "pattern": "[a-fA-F0-9-]*",
          "type": "string"
        },
        "schemaStepId": {
          "maxLength": 36,
          "minLength": 36,
          "pattern": "[a-fA-F0-9-]*",
          "type": "string"
        },
        "nextSchemaStepId": {
          "maxLength": 36,
          "minLength": 36,
          "pattern": "[a-fA-F0-9-]*",
          "type": "string"
        },
        "nextStepIsLast": {
          "type": "boolean"
        },
        "isStepRejection": {
          "type": "boolean"
        },
        "isStepProcessDisposal": {
          "type": "boolean"
        },
        "isSubmittedWithStepComment": {
          "type": "boolean"
        },
        "schemaVersion": {
          "pattern": "^[a-fA-F0-9]*$",
          "type": "string"
        },
        "instanceId": {
          "maxLength": 36,
          "minLength": 36,
          "pattern": "[a-fA-F0-9-]*",
          "type": "string"
        },
        "processIsComplete": {
          "type": "boolean"
        },
        "actorId": {
          "type": "string"
        },
        "initialActorId": {
          "type": "string"
        },
        "currentStepIndex": {
          "format": "int32",
          "type": "integer"
        },
        "commentaryIsPublic": {
          "type": "boolean"
        },
        "parentInstanceId": {
          "maxLength": 36,
          "minLength": 36,
          "pattern": "[a-fA-F0-9-]*",
          "type": "string"
        }
      }
    },
    "FieldAssignments": {
      "type": "object",
      "properties": {
        "public": {
          "maxLength": 500,
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldValuePair"
          }
        },
        "private": {
          "maxLength": 500,
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateFieldsAssignment"
          }
        }
      }
    },
    "ProcessStepCommentHistory": {
      "type": "object",
      "properties": {
        "sendingStepSchemaId": {
          "type": "string"
        },
        "recievingStepSchemaId": {
          "type": "string"
        },
        "stepComment": {
          "type": "string"
        },
        "sendingActorId": {
          "type": "string"
        },
        "timestamp": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "FieldValuePair": {
      "type": "object",
      "properties": {
        "id": {
          "maxLength": 36,
          "minLength": 36,
          "pattern": "[a-fA-F0-9-]*",
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "verification_url": {
          "type": "string"
        }
      }
    },
    "PrivateFieldsAssignment": {
      "type": "object",
      "properties": {
        "actorId": {
          "maxLength": 36,
          "minLength": 36,
          "pattern": "[a-fA-F0-9-]*",
          "type": "string"
        },
        "fields": {
          "maxLength": 500,
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldValuePair"
          }
        }
      }
    },
    "ProcessSchemaSummary": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "archived": {
          "type": "boolean"
        },
        "parentSchemaIds": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "publicIdentifierFieldIds": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        }
      }
    },
    "ProcessInstance": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "schemaId": {
          "type": "string"
        },
        "schemaVersionId": {
          "type": "string"
        },
        "schemaTitle": {
          "type": "string"
        },
        "stepZeroTxId": {
          "type": "string"
        },
        "latestStepTxId": {
          "type": "string"
        },
        "isComplete": {
          "type": "boolean"
        },
        "publicIdentifier": {
          "type": "string"
        }
      }
    },
    "ProcessProgressReport": {
      "type": "object",
      "properties": {
        "schema": {
          "$ref": "#/definitions/ProcessSchemaModel"
        },
        "processInstanceId": {
          "type": "string"
        },
        "stepStatuses": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/StepStatus"
          }
        },
        "mostRecentActivityTimestamp": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ProcessSchemaModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "fields": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessField"
          }
        },
        "steps": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessSchemaStep"
          }
        },
        "actors": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessActor"
          }
        },
        "archived": {
          "type": "boolean"
        },
        "commentaryIsPublic": {
          "type": "boolean"
        },
        "publicIdentifierFieldIds": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "parentSchemaIds": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        }
      },
      "example": {
        "id": "8f154b5d-a900-4944-a524-16e86c67004e",
        "version": "1ad814bd9b903bb874ebd151b65e2583d88934ce781c29dfd00962d134067ba7",
        "title": "A Schema Title",
        "description": "A Schema Description",
        "fields": [
          {
            "id": "9f9666a1-8c8f-4607-970c-53262143e064",
            "isRequired": true,
            "minLength": 1,
            "maxLength": 500,
            "isPublic": true,
            "label": [
              {
                "culture": "en-GB",
                "display": "Populate Me"
              }
            ],
            "type": "SingleLineText",
            "validation": {
              "rules": [
                {
                  "rule": "Not Implemented",
                  "error": [
                    {
                      "culture": "en-GB",
                      "display": "Not Implemented"
                    }
                  ]
                }
              ],
              "regexs": [
                {
                  "rule": "Not Implemented",
                  "error": [
                    {
                      "culture": "en-GB",
                      "display": "Not Implemented"
                    }
                  ]
                }
              ]
            },
            "help": [
              {
                "culture": "en-GB",
                "display": "Help Me"
              }
            ],
            "options": [
              {
                "id": "d283e39f-ff24-4146-b1ea-453f6fcb77c5",
                "input": [
                  {
                    "culture": "en-GB",
                    "display": "Option 1"
                  }
                ],
                "value": "1"
              }
            ],
            "consumableClaimName": "ConsumeMeAsAClaim",
            "publishableClaimName": "PublishableClaimName",
            "publishableAttestationName": "PublishableAttestationName",
            "consumableAttestationName": "ConsumeMeAsAnAttestation",
            "consumers": [
              "3c30550b-2c0d-44bc-8a04-229ee0b32774"
            ],
            "tags": []
          }
        ],
        "steps": [
          {
            "id": "95b4f1ad-6291-47f3-a69e-b3911b32d2c0",
            "title": [
              {
                "culture": "en-GB",
                "display": "Step Title"
              }
            ],
            "guidanceNotes": [
              {
                "culture": "en-GB",
                "display": "Guidane Notes"
              }
            ],
            "fields": [
              "9f9666a1-8c8f-4607-970c-53262143e064"
            ],
            "contributor": "95f90ef6-43b7-4cac-9e90-f777583fe771",
            "isSingleUserWallet": false,
            "sections": [
              {
                "id": "f2afa46b-5c9f-4031-b9fe-b27f1c30aabc",
                "field_ids": [
                  "9f9666a1-8c8f-4607-970c-53262143e064"
                ]
              }
            ]
          }
        ],
        "actors": [
          {
            "id": "95f90ef6-43b7-4cac-9e90-f777583fe771",
            "name": "_siccar_actor_wallet_actor1"
          }
        ],
        "archived": false,
        "commentaryIsPublic": true,
        "publicIdentifierFieldIds": [],
        "parentSchemaIds": []
      }
    },
    "StepStatus": {
      "type": "object",
      "properties": {
        "stepTransactionId": {
          "type": "string"
        },
        "stepIndex": {
          "format": "int32",
          "type": "integer"
        },
        "stepTitle": {
          "type": "string"
        },
        "completionTime": {
          "format": "int32",
          "type": "integer"
        },
        "stepId": {
          "type": "string"
        }
      }
    },
    "ProcessField": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "alias": {
          "type": "string"
        },
        "isRequired": {
          "type": "boolean"
        },
        "minLength": {
          "format": "int32",
          "type": "integer"
        },
        "maxLength": {
          "format": "int32",
          "type": "integer"
        },
        "isPublic": {
          "type": "boolean"
        },
        "label": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/MultiLanguageLabel"
          }
        },
        "type": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "type": "integer"
        },
        "validation": {
          "$ref": "#/definitions/ProcessFieldValidation"
        },
        "help": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/MultiLanguageLabel"
          }
        },
        "options": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessFieldOption"
          }
        },
        "consumableClaimName": {
          "type": "string"
        },
        "publishableClaimName": {
          "type": "string"
        },
        "publishableAttestationName": {
          "type": "string"
        },
        "consumableAttestationName": {
          "type": "string"
        },
        "consumers": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "tags": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ProcessSchemaStep": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "title": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/MultiLanguageLabel"
          }
        },
        "guidanceNotes": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/MultiLanguageLabel"
          }
        },
        "fields": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "contributor": {
          "format": "uuid",
          "type": "string"
        },
        "isSingleUserWallet": {
          "type": "boolean"
        },
        "sections": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessSection"
          }
        },
        "branchCondition": {
          "$ref": "#/definitions/ProcessSchemaStepBranchCondition"
        }
      }
    },
    "ProcessActor": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "MultiLanguageLabel": {
      "type": "object",
      "properties": {
        "culture": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "ProcessFieldValidation": {
      "type": "object",
      "properties": {
        "rules": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessValidationImpl"
          }
        },
        "regexs": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessValidationImpl"
          }
        }
      }
    },
    "ProcessFieldOption": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "input": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/MultiLanguageLabel"
          }
        },
        "value": {
          "type": "string"
        }
      }
    },
    "ProcessSection": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "field_ids": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "title": {
          "type": "string"
        },
        "guidanceNotes": {
          "type": "string"
        }
      }
    },
    "ProcessSchemaStepBranchCondition": {
      "type": "object",
      "properties": {
        "basis": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "stepId": {
          "format": "uuid",
          "type": "string"
        },
        "fieldId": {
          "format": "uuid",
          "type": "string"
        },
        "finishWhenFieldIsFalse": {
          "type": "boolean"
        },
        "stepIdWhenFieldIsFalse": {
          "format": "uuid",
          "type": "string"
        },
        "finishWhenFieldIsTrue": {
          "type": "boolean"
        },
        "stepIdWhenFieldIsTrue": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "ProcessValidationImpl": {
      "type": "object",
      "properties": {
        "rule": {
          "type": "string"
        },
        "error": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/MultiLanguageLabel"
          }
        }
      }
    },
    "ProcessSchemaPublishableClaim": {
      "type": "object",
      "properties": {
        "publishableClaimName": {
          "type": "string"
        },
        "fieldType": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "type": "integer"
        }
      }
    },
    "ProcessSchemaPublishableAttestation": {
      "type": "object",
      "properties": {
        "publishableAttestationName": {
          "type": "string"
        },
        "fieldType": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "type": "integer"
        }
      }
    },
    "PublicProcessDataSearchResult": {
      "type": "object",
      "properties": {
        "transactionHash": {
          "type": "string"
        },
        "schemaTitle": {
          "type": "string"
        },
        "matches": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PublicProcessDataSearchInstanceMatch"
          }
        }
      }
    },
    "PublicProcessDataSearchInstanceMatch": {
      "type": "object",
      "properties": {
        "fieldOrStepTitle": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "RequiredStep": {
      "type": "object",
      "properties": {
        "summary": {
          "$ref": "#/definitions/RequiredStepSummary"
        },
        "fields": {
          "$ref": "#/definitions/IRequiredStepFields"
        },
        "sections": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessSection"
          }
        },
        "comments": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/RequiredStepComment"
          }
        },
        "wasPreviouslyRejected": {
          "type": "boolean"
        },
        "wasSubmittedWithComment": {
          "type": "boolean"
        }
      }
    },
    "RequiredStepSummary": {
      "type": "object",
      "properties": {
        "title": {
          "maxLength": 500,
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/MultiLanguageLabel"
          }
        },
        "uniqueIdentifier": {
          "type": "string"
        },
        "guidanceNotes": {
          "maxLength": 500,
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/MultiLanguageLabel"
          }
        },
        "schemaId": {
          "maxLength": 36,
          "minLength": 36,
          "pattern": "[a-fA-F0-9-]*",
          "type": "string"
        },
        "schemaVersionId": {
          "pattern": "^[a-fA-F0-9]*$",
          "type": "string"
        },
        "schemaStepIndex": {
          "format": "int32",
          "type": "integer"
        },
        "processInstanceId": {
          "maxLength": 36,
          "minLength": 36,
          "pattern": "[a-fA-F0-9-]*",
          "type": "string"
        },
        "previousStepId": {
          "maxLength": 36,
          "minLength": 36,
          "pattern": "[a-fA-F0-9-]*",
          "type": "string"
        },
        "schemaTitle": {
          "maxLength": 500,
          "type": "string"
        },
        "commentaryIsPublic": {
          "type": "boolean"
        },
        "isLastStep": {
          "type": "boolean"
        }
      }
    },
    "IRequiredStepFields": {
      "type": "object",
      "properties": {
        "target": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TargetField"
          }
        },
        "fulfilled": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/FulfilledField"
          }
        }
      }
    },
    "RequiredStepComment": {
      "type": "object",
      "properties": {
        "sendingActorName": {
          "type": "string"
        },
        "receivingActorName": {
          "type": "string"
        },
        "commentText": {
          "type": "string"
        },
        "isReceivedComment": {
          "type": "boolean"
        }
      }
    },
    "TargetField": {
      "type": "object",
      "properties": {
        "schemaField": {
          "$ref": "#/definitions/ProcessField"
        },
        "mostRecentValue": {
          "type": "string"
        },
        "mostRecentlyRejectedValue": {
          "type": "string"
        }
      }
    },
    "FulfilledField": {
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "id": {
          "maxLength": 36,
          "minLength": 36,
          "pattern": "[a-fA-F0-9-]*",
          "type": "string"
        },
        "label": {
          "maxLength": 500,
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/MultiLanguageLabel"
          }
        },
        "type": {
          "maxLength": 50,
          "minLength": 0,
          "pattern": "[a-zA-Z0-9]*",
          "type": "string"
        },
        "value": {
          "maxLength": 1000,
          "minLength": 0,
          "type": "string"
        },
        "verificationUrl": {
          "maxLength": 1000,
          "minLength": 0,
          "type": "string"
        },
        "help": {
          "maxLength": 500,
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/MultiLanguageLabel"
          }
        }
      }
    },
    "StepFulfillment": {
      "type": "object",
      "properties": {
        "fields": {
          "maxLength": 500,
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldValuePair"
          }
        },
        "stepComment": {
          "type": "string"
        }
      },
      "example": {
        "fields": [
          {
            "id": "7e61653a-caf2-4310-905b-293707ccb710",
            "value": "I am a field value",
            "verification_url": "https://i-will-verofy-you/transactions/1ad814bd9b903bb874ebd151b65e2583d88934ce781c29dfd00962d134067ba7"
          }
        ],
        "stepComment": "I am a step comment"
      }
    },
    "StepRejection": {
      "type": "object",
      "properties": {
        "stepComment": {
          "type": "string"
        }
      },
      "example": {
        "stepComment": "I reject this step"
      }
    },
    "TransactionReport": {
      "type": "object",
      "properties": {
        "summary": {
          "$ref": "#/definitions/SiccarTransactionSummary"
        },
        "nextTransactionId": {
          "type": "string"
        },
        "payload": {
          "$ref": "#/definitions/TransactionReportPayload"
        },
        "stepComments": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionReportStepComment"
          }
        }
      }
    },
    "SiccarTransactionSummary": {
      "type": "object",
      "properties": {
        "timestamp": {
          "format": "int32",
          "type": "integer"
        },
        "id": {
          "pattern": "^[a-fA-F0-9]*$",
          "type": "string"
        },
        "sender": {
          "maxLength": 36,
          "minLength": 36,
          "pattern": "[a-fA-F0-9-]*",
          "type": "string"
        },
        "recipient": {
          "maxLength": 36,
          "minLength": 36,
          "pattern": "[a-fA-F0-9-]*",
          "type": "string"
        },
        "previous": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "previousDataTxId": {
          "type": "string",
          "readOnly": true
        },
        "isCoinbase": {
          "type": "boolean"
        }
      }
    },
    "TransactionReportPayload": {
      "type": "object",
      "properties": {
        "public": {
          "$ref": "#/definitions/TransactionReportPublicPayload"
        },
        "private": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionReportPrivatePayload"
          }
        }
      }
    },
    "TransactionReportStepComment": {
      "type": "object",
      "properties": {
        "sendingActorName": {
          "type": "string"
        },
        "receivingActorName": {
          "type": "string"
        },
        "commentText": {
          "type": "string"
        },
        "isDecrypted": {
          "type": "boolean"
        },
        "rawData": {
          "type": "string"
        },
        "isPublicComment": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "TransactionReportPublicPayload": {
      "type": "object",
      "properties": {
        "originalJson": {
          "type": "string"
        },
        "fields": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionReportField"
          }
        }
      }
    },
    "TransactionReportPrivatePayload": {
      "type": "object",
      "properties": {
        "actorId": {
          "type": "string"
        },
        "actorName": {
          "type": "string"
        },
        "originalPayloads": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fields": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionReportField"
          }
        },
        "isDecrypted": {
          "type": "boolean"
        }
      }
    },
    "TransactionReportField": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "label": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/MultiLanguageLabel"
          }
        },
        "type": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "type": "integer"
        },
        "value": {
          "type": "string"
        },
        "verificationUrl": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "name": "Authorization",
      "in": "header",
      "type": "apiKey",
      "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\""
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ],
  "tags": []
}
